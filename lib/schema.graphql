type Item {
  _id: ID!
  mysqlId: Int!
  name: String!
  planId: Int!
}

type Catalog {
  _id: ID!
  mysqlId: Int!
  name: String!
  items: [Item]
  standarPremiumItems: [Item]
}

type Query {
  "Return all items"
  getItems: [Item]
  "Return a item"
  getItem(id: ID!): Item
  "Return all catalogs"
  getCatalogs: [Catalog]
  "Return a catalog"
  getCatalog(id: ID!): Catalog
  "Return catalogs with standard and premium item plan"
  getCatalogsStandardPremimItemPlan: [Catalog]
}

input ItemInput {
  mysqlId: Int!
  name: String!
  planId: Int!
}

input CatalogInput {
  mysqlId: Int!
  name: String!
}

input ItemEditInput {
  name: String
  planId: Int
}

type Mutation {
  "Create Items autocomplete"
  createItem(input: ItemInput!): Item
  "Create Catalogs"
  createCatalog(input: CatalogInput!): Catalog
  "Edit item by id"
  editItem(_id: ID!, input: ItemEditInput): Item
  "Delete item by id"
  deleteItem(_id: ID!): String
  "Relate Item to a catalog"
  relateItemsToCatalog(catalogID: ID!, itemID: ID!): Catalog
}
